[
    {
        "title": "Anchor Point",
        "dropdownText": [
            "Center Anchor Point - Text Layer",
            "Left Center - Text",
            "Right Center - Text"
        ],
        "dropdownPosition": [
            "anchorPoint",
            "anchorPoint",
            "anchorPoint"
        ],
        "dropdownExpression": [
            "a = thisLayer.sourceRectAtTime();\n height = a.height;\n width = a.width;\n top = a.top;\n left = a.left;\n \n x = left + width/2;\n y = top + height/2;\n [x,y];",
            "a = thisLayer.sourceRectAtTime();\n height = a.height;\n width = a.width;\n top = a.top;\n left = a.left;\n \n x = left;\n y = top + height / 2;\n [x,y];",
            "a = thisLayer.sourceRectAtTime();\n height = a.height;\n width = a.width;\n top = a.top;\n left = a.left;\n \n x = left + width;\n y = top + height / 2;\n [x,y];"
        ]
    },
    {
        "title": "Useful Expressions - PUBG EXPRESSIONS",
        "dropdownText": [
            "Blink - Opacity",
            "Bounce Position"
        ],
        "dropdownPosition": [
            "opacity",
            "position"
        ],
        "dropdownExpression": [
            "Speed = 10; \n \n n = Math.sin(time*Speed); \n \n if (n<=0) \\{\n 0 \n \\}else\\{\n 100;\\}",
            "amp = .1;\n freq = 2.0;\n decay = 2.0;\n n = 0;\n if (numKeys > 0)\\{\n n = nearestKey(time).index;\n if (key(n).time > time)\\{\n n--;\n \\}\\}\n if (n == 0)\\{ t = 0;\n \\}else\\{\n t = time - key(n).time;\n \\}\n if (n > 0 && t < 1)\\{\n v = velocityAtTime(key(n).time - thisComp.frameDuration/10);\n value + v*amp*Math.sin(freq*t*2*Math.PI)/Math.exp(decay*t);\n \\}else\\{value\\}"
        ]
    },
    {
        "title": "ESPORTSTUDION VINJETT",
        "dropdownText": [
            "Scale According To Z",
            "random in z-space",
            "Maintain Stroke Width"
        ],
        "dropdownPosition": [
            "scale",
            "position",
            "user"
        ],
        "dropdownExpression": [
            "w=thisComp.width*thisComp.pixelAspect;\n zoom=w+w*0.388888;\n transform.scale*(1+transform.position[2]/zoom)",
            "seedRandom(index, 1);\n x = transform.position[0];\n y = transform.position[1];\n z = random(thisComp.layer(\"EXPRESSION CONTROLS\").effect(\"Z SPACE\")(\"Slider\"), thisComp.layer(\"EXPRESSION CONTROLS\").effect(\"Z SPACE 2\")(\"Slider\"));\n [x, y, z]",
            "value / length(toComp([0,0]), toComp([0.7071,0.7071])) || 0.001;"
        ]
    }
]